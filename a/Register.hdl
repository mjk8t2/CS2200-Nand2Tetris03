/**
 * Author:	Sung Ki Ling
 * Date:	2018/11/08
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

// Let $b_i$ for $i \in [0, 15]$ represent each bit stored by this register.
// Two distinct cases describe the functionality of this chip.
//   - Case 1 (load = 0): $b_i=in[i]$
//   - Case 2 (load = 1): $b_i$ holds its current value.
// These cases follow from the documentation for the operation of the Bit chip.
// The fact that this holds for each individual bit implies that the overall operation is to set
// the register value to the input when load=1, and keep the current register value if load=0.

CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
	Bit(in=in[0],load=load,out=out[0]);
    Bit(in=in[1],load=load,out=out[1]);
    Bit(in=in[2],load=load,out=out[2]);
    Bit(in=in[3],load=load,out=out[3]);
    Bit(in=in[4],load=load,out=out[4]);
    Bit(in=in[5],load=load,out=out[5]);
    Bit(in=in[6],load=load,out=out[6]);
    Bit(in=in[7],load=load,out=out[7]);
    Bit(in=in[8],load=load,out=out[8]);
    Bit(in=in[9],load=load,out=out[9]);
    Bit(in=in[10],load=load,out=out[10]);
    Bit(in=in[11],load=load,out=out[11]);
    Bit(in=in[12],load=load,out=out[12]);
    Bit(in=in[13],load=load,out=out[13]);
    Bit(in=in[14],load=load,out=out[14]);
    Bit(in=in[15],load=load,out=out[15]);
}

// there are 16 bits in the 16 bit register, it checks each of them and see if the load value is 1
// if load==1, it will return the input, if it is 0, it will return the value
// if load(t-1) == 1 then out(t) = in(t - 1) else out(t) = out(t - 1)