/**
 * Author:	Christopher O'Toole
 * Date:	2018/11/08
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

// The RAM8 chip is composed of 8 16-bit registers. If load=1, the RAM8 chip will set 
// the specified 16-bit value in in[16] to the address specified, otherwise the register at
// that address will keep its current value.
// For example, if address==000 and load = 1, then the prescribed operation is to set the first
// register to the value held in in[16].
// The return value of this chip will either be the value that was just set if load=1 or the value that was
// held previously by the register at the specified address if load=0.

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	// Generate flags which select the register indicated by the address.
	DMux8Way(in=load,sel=address,a=l1,b=l2,c=l3,d=l4,e=l5,f=l6,g=l7,h=l8);
	
	// Set register 1 if its address is specified
	Register(in=in,load=l1,out=o1);
	// Set register 2 if its address is specified
    Register(in=in,load=l2,out=o2);
	// Set register 3 if its address is specified
    Register(in=in,load=l3,out=o3);
	// Set register 4 if its address is specified
    Register(in=in,load=l4,out=o4);
	// Set register 5 if its address is specified
    Register(in=in,load=l5,out=o5);
	// Set register 6 if its address is specified
    Register(in=in,load=l6,out=o6);
	// Set register 7 if its address is specified
    Register(in=in,load=l7,out=o7);
	// Set register 8 if its address is specified
    Register(in=in,load=l8,out=o8);

	// Return the value held by the register at specified address.
    Mux8Way16(a=o1,b=o2,c=o3,d=o4,e=o5,f=o6,g=o7,h=o8,sel=address,out=out);
}