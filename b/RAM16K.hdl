/**
 * Author:	Christopher O'Toole
 * Date:	2018/11/08
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */
 
 
// The RAM16K chip can set or retrieve the value held at the address specified. If
// load=0 then the value currently held is returned, otherwise the value specified 
// in in[16] is set.

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
	// Select a RAM4K module based on the address specified.
	DMux4Way(in=load,sel=address[0..1],a=l1,b=l2,c=l3,d=l4);
	
	// Set the 16-bit value at address specified in the RAM4K module
	// if load=1
    RAM4K(in=in,load=l1,address=address[2..13],out=o1);
	// Set the 16-bit value at address specified in the RAM4K module
	// if load=1
    RAM4K(in=in,load=l2,address=address[2..13],out=o2);
	// Set the 16-bit value at address specified in the RAM4K module
	// if load=1
    RAM4K(in=in,load=l3,address=address[2..13],out=o3);
	// Set the 16-bit value at address specified in the RAM4K module
	// if load=1
    RAM4K(in=in,load=l4,address=address[2..13],out=o4);
	
	// Select the value specified by the address through identification
	// of which RAM4K module the address resided in.
    Mux4Way16(a=o1,b=o2,c=o3,d=o4,sel=address[0..1],out=out);
}
